---
// src/layouts/BaseLayout.astro
import { getRelativeLocaleUrl } from 'astro:i18n';

interface Props {
  title: string;
  description?: string;
}

const { title, description = "Developer portfolio and tech blog" } = Astro.props;
const { currentLocale = 'en' } = Astro.url;

// Translations
const i18n = {
  en: {
    toggleTheme: 'Toggle theme',
    toggleMenu: 'Toggle menu',
    toggleLang: 'Switch to Spanish',
  },
  es: {
    toggleTheme: 'Cambiar tema',
    toggleMenu: 'Cambiar menú',
    toggleLang: 'Cambiar a inglés',
  }
};

const t = i18n[currentLocale];
---

<!doctype html>
<html lang={currentLocale} class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <script is:inline>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    </script>
  </head>
  <body class="h-full bg-white dark:bg-gray-900 text-gray-900 dark:text-white transition-colors duration-200">
    <header class="fixed w-full top-0 z-50 bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700">
      <nav class="container mx-auto px-4 py-4 flex justify-between items-center">
        <a href="/" class="text-xl font-bold">Portfolio</a>
        
        <div class="flex items-center gap-4">
          <!-- Theme toggle -->
          <button
            id="theme-toggle"
            class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800"
            aria-label={t.toggleTheme}
          >
            <svg
              id="theme-toggle-dark-icon"
              class="hidden w-5 h-5"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
            </svg>
            <svg
              id="theme-toggle-light-icon"
              class="hidden w-5 h-5"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
              ></path>
            </svg>
          </button>

          <!-- Language toggle -->
          <a
            href={currentLocale === 'en' ? '/es' : '/'}
            class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800"
          >
            {currentLocale === 'en' ? 'ES' : 'EN'}
          </a>
        </div>
      </nav>
    </header>

    <main class="container mx-auto px-4 pt-24 pb-12">
      <slot />
    </main>

    <footer class="border-t border-gray-200 dark:border-gray-700">
      <div class="container mx-auto px-4 py-8">
        <p class="text-center text-gray-600 dark:text-gray-400">
          © {new Date().getFullYear()}
        </p>
      </div>
    </footer>

    <script>
      // Theme toggle functionality
      const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
      const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
      const themeToggleBtn = document.getElementById('theme-toggle');

      // Change the icons inside the button based on previous settings
      if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        themeToggleLightIcon.classList.remove('hidden');
      } else {
        themeToggleDarkIcon.classList.remove('hidden');
      }

      themeToggleBtn?.addEventListener('click', () => {
        // Toggle icons
        themeToggleDarkIcon.classList.toggle('hidden');
        themeToggleLightIcon.classList.toggle('hidden');

        // If is set in localStorage
        if (localStorage.theme === 'dark') {
          localStorage.theme = 'light';
          document.documentElement.classList.remove('dark');
        } else {
          localStorage.theme = 'dark';
          document.documentElement.classList.add('dark');
        }
      });
    </script>
  </body>
</html>